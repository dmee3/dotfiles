# Make a directory and cd into it
mcd() {
  mkdir -p $1; cd $1;
}

# Shortcut for wal command, setting terminal colors and background image
# wp() {
#   if [ -z "$1" ]; then # -z checks if expansion of "$1" is a null string
#     wal -i "$HOME/Pictures/"
#   else
#     wal -i "$HOME/Pictures/$1"
#   fi
# }

# Autocomplete wp command with files in ~/Pictures directory
# _wp() {
#   local files=("$HOME/Pictures/$2"*)
#   [[ -e ${files[0]} ]] && COMPREPLY=( "${files[@]##*/}" )
# }
# complete -F _wp wp

# Run vim based on fuzzy find
vf() {
  local files
  IFS=$'\n' files=($(fzf --height=50% --query="$1" --multi --select-1 --exit-0 --preview-window right:70% --preview 'highlight -O ansi -l --failsafe {}'))
  [[ -n "$files" ]] && ${EDITOR:-vim} "${files[@]}"
}

# Quick shortcut for fff
f() {
  bash ~/.bash_scripts/fff "$@"
  cd "$(< ~/.fff_d)"
}

# Customization (temporary file to use)
# Default: '${XDG_CACHE_HOME}/fff/fff.d'
#          If not using XDG, '${HOME}/.cache/fff/fff.d' is used.
export FFF_CD_FILE=~/.fff_d

# Print a colorized success/failure message
report_status() {
  if [ $1 == 0 ]; then
    echo -e "\033[0;32mSUCCESS\033[0m"
  else
    echo -e "\033[0;31mFAILURE\033[0m"
  fi
}

# Prints all colors and codes
colorgrid() {
  iter=16
  while [ $iter -lt 52 ]; do
    second=$[$iter+36]
    third=$[$second+36]
    four=$[$third+36]
    five=$[$four+36]
    six=$[$five+36]
    seven=$[$six+36]
    if [ $seven -gt 250 ];then seven=$[$seven-251]; fi

    echo -en "\e[38;5;$(echo $iter)m█ "
    printf "%03d" $iter
    echo -en "   \e[38;5;$(echo $second)m█ "
    printf "%03d" $second
    echo -en "   \e[38;5;$(echo $third)m█ "
    printf "%03d" $third
    echo -en "   \e[38;5;$(echo $four)m█ "
    printf "%03d" $four
    echo -en "   \e[38;5;$(echo $five)m█ "
    printf "%03d" $five
    echo -en "   \e[38;5;$(echo $six)m█ "
    printf "%03d" $six
    echo -en "   \e[38;5;$(echo $seven)m█ "
    printf "%03d" $seven

    iter=$[$iter+1]
    printf '\r\n'
  done

  echo -en "\e[0m"
}

